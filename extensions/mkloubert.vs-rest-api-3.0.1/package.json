{
	"name": "vs-rest-api",
	"displayName": "REST API",
	"description": "Extension that provides a REST API to control your editor.",
	"version": "3.0.1",
	"publisher": "mkloubert",
	"engines": {
		"vscode": "^1.20.0"
	},
	"license": "MIT",
	"categories": [
		"Other"
	],
	"keywords": [
		"HTTP",
		"Remote",
		"Editor",
		"REST",
		"API"
	],
	"activationEvents": [
		"*"
	],
	"main": "./out/src/extension",
	"contributes": {
		"commands": [
			{
				"command": "extension.restApi.toggleHostState",
				"title": "Starts or stops the api server",
				"category": "REST API"
			},
			{
				"command": "extension.restApi.startHost",
				"title": "(Re)start the api server",
				"category": "REST API"
			},
			{
				"command": "extension.restApi.stopHost",
				"title": "Stop the api server",
				"category": "REST API"
			}
		],
		"configuration": {
			"properties": {
				"rest.api": {
					"type": "object",
					"properties": {
						"autoStart": {
							"description": "Start HTTP on startup or not.",
							"type": "boolean",
							"default": false
						},
						"customOnly": {
							"description": "Indicates if build-in endpoints are disabled by default or not.",
							"type": "boolean",
							"default": false
						},
						"disableNewVersionPopups": {
							"description": "Disables popups that report for a new (installed) version.",
							"type": "boolean",
							"default": false
						},
						"endpoints": {
							"description": "One or more regular expressions that describe custom endpoints to register.",
							"type": "object",
							"patternProperties": {
								"(.*)": {
									"description": "The regular expression of the endpoint.",
									"type": "object",
									"format": "regex",
									"properties": {
										"isActive": {
											"description": "Indicates if the endpoint is currently active or not.",
											"type": "boolean",
											"default": true
										},
										"options": {
											"description": "The options for the execution."
										},
										"script": {
											"description": "The path to the script with the methods to handle the API request.",
											"type": "string",
											"default": "./my-api-endpoint.js"
										},
										"state": {
											"description": "The initial value for the execution arguments of the underlying script."
										}
									},
									"required": [
										"script"
									]
								}
							}
						},
						"globals": {
							"description": "Data that is accessable from everywhere, in scripts e.g."
						},
						"guest": {
							"oneOf": [
								{
									"description": "Defines if guest account should be activated or not.",
									"type": "boolean",
									"default": true
								},
								{
									"description": "Settings for the guest account.",
									"type": "object",
									"properties": {
										"canActivate": {
											"description": "Defines if guest is able to activate extensions or not.",
											"type": "boolean",
											"default": false
										},
										"canAnything": {
											"description": "Defines if guest is able to do anything with the API or not.",
											"type": "boolean",
											"default": false
										},
										"canClose": {
											"description": "Defines if guest is able to close editor tabs or not.",
											"type": "boolean",
											"default": false
										},
										"canCreate": {
											"description": "Defines if guest is able to create things like output channels or not.",
											"type": "boolean",
											"default": false
										},
										"canDelete": {
											"description": "Defines if guest is able to delete files or folders.",
											"type": "boolean",
											"default": false
										},
										"canDeploy": {
											"description": "Defines if guest is able to deploy files via 'vs-deploy', e.g.",
											"type": "boolean",
											"default": false
										},
										"canExecute": {
											"description": "Defines if guest can execute commands or not.",
											"type": "boolean",
											"default": false
										},
										"canOpen": {
											"description": "Defines if guest is able to open an editor tab in VS Code or not.",
											"type": "boolean",
											"default": false
										},
										"canWrite": {
											"description": "Defines if guest has write access or not.",
											"type": "boolean",
											"default": false
										},
										"customOnly": {
											"description": "Indicates if build-in endpoints are disabled for a guest or not.",
											"type": "boolean",
											"default": false
										},
										"endpoints": {
											"description": "Defines one or more endpoint(s) via regular expressions that are available for the guest.",
											"type": "object",
											"patternProperties": {
												"(.*)": {
													"description": "The regular expression for the endpoint(s) to make available.",
													"type": "object",
													"properties": {
														"isAvailable": {
															"description": "Endpoint is available or not.",
															"type": "boolean",
															"default": true
														},
														"methods": {
															"description": "One or more HTTP methods that are allowed for the guest.",
															"oneOf": [
																{
																	"description": "The name of the HTTP method to allow.",
																	"type": "string"
																},
																{
																	"description": "The names of the HTTP methods to allow.",
																	"type": "array",
																	"items": {
																		"description": "The name of the HTTP method to allow.",
																		"type": "string"
																	}
																}
															]
														}
													}
												}
											}
										},
										"exclude": {
											"description": "Defines one or more glob patterns with files to exclude.",
											"oneOf": [
												{
													"description": "The glob pattern with the files to exclude.",
													"type": "string"
												},
												{
													"description": "The list glob patterns with the files to exclude.",
													"type": "array",
													"default": [],
													"items": {
														"type": "string"
													}
												}
											]
										},
										"files": {
											"description": "Defines one or more glob patterns with files to include.",
											"oneOf": [
												{
													"description": "The glob pattern with the files to include.",
													"type": "string",
													"default": "**"
												},
												{
													"description": "The list glob patterns with the files to include.",
													"type": "array",
													"default": [
														"**"
													],
													"items": {
														"type": "string"
													}
												}
											]
										},
										"isActive": {
											"description": "Defines if guest account should be activated or not.",
											"type": "boolean",
											"default": true
										},
										"values": {
											"description": "Custom values for the guest account.",
											"type": "object"
										},
										"withDot": {
											"description": "Show (directories) with leading '.' character for the guest or not.",
											"type": "boolean",
											"default": false
										}
									}
								}
							]
						},
						"hooks": {
							"description": "One or more hooks to register.",
							"type": "object",
							"patternProperties": {
								"(.*)": {
									"description": "The regular expression for the hook(s) to register.",
									"oneOf": [
										{
											"type": "string",
											"description": "The path to the script to execute.",
											"default": "./my-hook.js"
										},
										{
											"type": "object",
											"properties": {
												"options": {
													"description": "Data for the execution."
												},
												"script": {
													"description": "The path to the script to execute.",
													"type": "string",
													"default": "./my-hook.js"
												}
											},
											"required": [
												"script"
											]
										},
										{
											"type": "array",
											"items": {
												"oneOf": [
													{
														"type": "string",
														"description": "The path to the script to execute."
													},
													{
														"type": "object",
														"properties": {
															"options": {
																"description": "Data for the execution."
															},
															"script": {
																"description": "The path to the script to execute.",
																"type": "string",
																"default": "./my-hook.js"
															}
														},
														"required": [
															"script"
														]
													}
												]
											}
										}
									]
								}
							}
						},
						"lang": {
							"description": "The custom language to use.",
							"type": "string"
						},
						"openInBrowser": {
							"type": "boolean",
							"description": "Indicates if the root endpoint should be opened in browser after host has been started or not.",
							"default": false
						},
						"preparer": {
							"oneOf": [
								{
									"type": "string",
									"description": "The path to the script that prepares an user (object).",
									"default": "./my-user-preparer.js"
								},
								{
									"type": "object",
									"description": "Settings for a account preparer script.",
									"properties": {
										"options": {
											"description": "The options for the execution."
										},
										"script": {
											"description": "The path to the script that prepares an account (object).",
											"type": "string",
											"default": "./my-user-preparer.js"
										}
									},
									"required": [
										"script"
									]
								}
							]
						},
						"port": {
							"oneOf": [
								{
									"description": "The TCP port the HTTP server should listen on.",
									"type": "integer",
									"minimum": 0,
									"maximum": 65535,
									"default": 1781
								},
								{
									"description": "Each property represents the machine (name) and its TCP port.",
									"type": "object",
									"patternProperties": {
										"(.*)": {
											"description": "The TCP port the HTTP server should listen on that machine.",
											"type": "integer",
											"minimum": 0,
											"maximum": 65535,
											"default": 1781
										}
									}
								}
							]
						},
						"realm": {
							"description": "The name of the realm for the authentication.",
							"type": "string",
							"default": "REST API for Visual Studio Code"
						},
						"showPopupOnSuccess": {
							"type": "boolean",
							"description": "Indicates if an info popup / notification should be displayed after a successful start / stop of the API host.",
							"default": true
						},
						"ssl": {
							"description": "Configuration for running as HTTPs server.",
							"properties": {
								"ca": {
									"description": "The path to the ca file.",
									"type": "string"
								},
								"cert": {
									"description": "The path to the file of the certificate.",
									"type": "string"
								},
								"key": {
									"description": "The path to the key file.",
									"type": "string"
								},
								"passphrase": {
									"description": "The required password for the key file.",
									"type": "string"
								},
								"rejectUnauthorized": {
									"description": "Request unauthorized or not.",
									"type": "boolean",
									"default": true
								}
							}
						},
						"users": {
							"oneOf": [
								{
									"description": "The configuration of the user.",
									"type": "object",
									"properties": {
										"canActivate": {
											"description": "Defines if user is able to activate extensions or not.",
											"type": "boolean",
											"default": false
										},
										"canAnything": {
											"description": "Defines if user is able to do anything with the API or not.",
											"type": "boolean",
											"default": false
										},
										"canClose": {
											"description": "Defines if user is able to close editor tabs or not.",
											"type": "boolean",
											"default": false
										},
										"canCreate": {
											"description": "Defines if user is able to create things like output channels or not.",
											"type": "boolean",
											"default": false
										},
										"canDelete": {
											"description": "Defines if user is able to delete files or folders.",
											"type": "boolean",
											"default": false
										},
										"canDeploy": {
											"description": "Defines if user is able to deploy files via 'vs-deploy', e.g.",
											"type": "boolean",
											"default": false
										},
										"canExecute": {
											"description": "Defines if user can execute commands or not.",
											"type": "boolean",
											"default": false
										},
										"canOpen": {
											"description": "Defines if user is able to open an editor tab in VS Code or not.",
											"type": "boolean",
											"default": false
										},
										"canWrite": {
											"description": "Defines if user has write access or not.",
											"type": "boolean",
											"default": false
										},
										"customOnly": {
											"description": "Indicates if build-in endpoints are disabled for that user or not.",
											"type": "boolean",
											"default": false
										},
										"endpoints": {
											"description": "Defines one or more endpoint(s) via regular expressions that are available for the user.",
											"type": "object",
											"patternProperties": {
												"(.*)": {
													"description": "The regular expression for the endpoint(s) to make available.",
													"type": "object",
													"properties": {
														"isAvailable": {
															"description": "Endpoint is available or not.",
															"type": "boolean",
															"default": true
														},
														"methods": {
															"description": "One or more HTTP methods that are allowed for the user.",
															"oneOf": [
																{
																	"description": "The name of the HTTP method to allow.",
																	"type": "string"
																},
																{
																	"description": "The names of the HTTP methods to allow.",
																	"type": "array",
																	"items": {
																		"description": "The name of the HTTP method to allow.",
																		"type": "string"
																	}
																}
															]
														}
													}
												}
											}
										},
										"exclude": {
											"description": "Defines one or more glob patterns with files to exclude.",
											"oneOf": [
												{
													"description": "The glob pattern with the files to exclude.",
													"type": "string"
												},
												{
													"description": "The list glob patterns with the files to exclude.",
													"type": "array",
													"default": [],
													"items": {
														"type": "string"
													}
												}
											]
										},
										"files": {
											"description": "Defines one or more glob patterns with files to include.",
											"oneOf": [
												{
													"description": "The glob pattern with the files to include.",
													"type": "string",
													"default": "**"
												},
												{
													"description": "The list glob patterns with the files to include.",
													"type": "array",
													"default": [
														"**"
													],
													"items": {
														"type": "string"
													}
												}
											]
										},
										"isActive": {
											"description": "Defines if user account should be activated or not.",
											"type": "boolean",
											"default": true
										},
										"name": {
											"description": "The name of the user.",
											"type": "string"
										},
										"password": {
											"description": "The password.",
											"type": "string"
										},
										"values": {
											"description": "Custom values for the user account.",
											"type": "object"
										},
										"withDot": {
											"description": "Show (directories) with leading '.' character for the user or not.",
											"type": "boolean",
											"default": false
										}
									},
									"required": [
										"name",
										"password"
									]
								},
								{
									"description": "A list of one or more users.",
									"type": "array",
									"items": {
										"properties": {
											"canActivate": {
												"description": "Defines if user is able to activate extensions or not.",
												"type": "boolean",
												"default": false
											},
											"canAnything": {
												"description": "Defines if user is able to do anything with the API or not.",
												"type": "boolean",
												"default": false
											},
											"canClose": {
												"description": "Defines if user is able to close editor tabs or not.",
												"type": "boolean",
												"default": false
											},
											"canCreate": {
												"description": "Defines if user is able to create things like output channels or not.",
												"type": "boolean",
												"default": false
											},
											"canDelete": {
												"description": "Defines if user is able to delete files or folders.",
												"type": "boolean",
												"default": false
											},
											"canDeploy": {
												"description": "Defines if user is able to deploy files via 'vs-deploy', e.g.",
												"type": "boolean",
												"default": false
											},
											"canExecute": {
												"description": "Defines if user can execute commands or not.",
												"type": "boolean",
												"default": false
											},
											"canOpen": {
												"description": "Defines if user is able to open an editor tab in VS Code or not.",
												"type": "boolean",
												"default": false
											},
											"canWrite": {
												"description": "Defines if user has write access or not.",
												"type": "boolean",
												"default": false
											},
											"customOnly": {
												"description": "Indicates if build-in endpoints are disabled for that user or not.",
												"type": "boolean",
												"default": false
											},
											"endpoints": {
												"description": "Defines one or more endpoint(s) via regular expressions that are available for the user.",
												"type": "object",
												"patternProperties": {
													"(.*)": {
														"description": "The regular expression for the endpoint(s) to make available.",
														"type": "object",
														"properties": {
															"isAvailable": {
																"description": "Endpoint is available or not.",
																"type": "boolean",
																"default": true
															},
															"methods": {
																"description": "One or more HTTP methods that are allowed for the user.",
																"oneOf": [
																	{
																		"description": "The name of the HTTP method to allow.",
																		"type": "string"
																	},
																	{
																		"description": "The names of the HTTP methods to allow.",
																		"type": "array",
																		"items": {
																			"description": "The name of the HTTP method to allow.",
																			"type": "string"
																		}
																	}
																]
															}
														}
													}
												}
											},
											"exclude": {
												"description": "Defines one or more glob patterns with files to exclude.",
												"oneOf": [
													{
														"description": "The glob pattern with the files to exclude.",
														"type": "string"
													},
													{
														"description": "The list glob patterns with the files to exclude.",
														"type": "array",
														"default": [],
														"items": {
															"type": "string"
														}
													}
												]
											},
											"files": {
												"description": "Defines one or more global patterns with files to include.",
												"oneOf": [
													{
														"description": "The glob pattern with the files to include.",
														"type": "string",
														"default": "**"
													},
													{
														"description": "The list glob patterns with the files to include.",
														"type": "array",
														"default": [
															"**"
														],
														"items": {
															"type": "string"
														}
													}
												]
											},
											"isActive": {
												"description": "Defines if user account should be activated or not.",
												"type": "boolean",
												"default": true
											},
											"name": {
												"description": "The name of the user.",
												"type": "string"
											},
											"password": {
												"description": "The password.",
												"type": "string"
											},
											"values": {
												"description": "Custom values for the user account.",
												"type": "object"
											},
											"withDot": {
												"description": "Show (directories) with leading '.' character for the user or not.",
												"type": "boolean",
												"default": false
											}
										},
										"required": [
											"name",
											"password"
										]
									}
								}
							]
						},
						"validator": {
							"description": "Defines a script that validates a client request.",
							"oneOf": [
								{
									"type": "string",
									"description": "The path to the validator script.",
									"default": "./my-client-validator.js"
								},
								{
									"type": "object",
									"description": "Settings for the client request validator.",
									"properties": {
										"options": {
											"description": "Additional options / data for the execution (if required)."
										},
										"script": {
											"type": "string",
											"description": "The path to the validator script.",
											"default": "./my-client-validator.js"
										},
										"state": {
											"description": "The initial value for the execution arguments of the underlying script."
										}
									},
									"required": [
										"script"
									]
								}
							]
						},
						"whiteboard": {
							"oneOf": [
								{
									"type": "boolean",
									"description": "Indicates if whiteboard feature should be active or not.",
									"default": true
								},
								{
									"type": "object",
									"description": "Settings for handling a virtual whiteboard.",
									"properties": {
										"dir": {
											"description": "The optional directory where to store the revisions.",
											"type": "string"
										},
										"isActive": {
											"type": "boolean",
											"description": "Indicates if whiteboard feature should be active or not.",
											"default": true
										}
									}
								}
							]
						},
						"withDot": {
							"description": "Show (directories) with leading '.' character or not.",
							"type": "boolean",
							"default": false
						}
					}
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "tsc -p ./",
		"compile": "tsc -watch -p ./",
		"postinstall": "node ./node_modules/vscode/bin/install",
		"test": "node ./node_modules/vscode/bin/test"
	},
	"devDependencies": {
		"@types/mocha": "^2.2.48",
		"@types/node": "^6.0.102",
		"mocha": "^2.3.3",
		"typescript": "^2.7.2",
		"vscode": "^1.1.13"
	},
	"icon": "icon.png",
	"badges": [
		{
			"description": "PayPal Donate",
			"url": "https://img.shields.io/badge/Donate-PayPal-green.svg",
			"href": "https://paypal.me/MarcelKloubert"
		}
	],
	"author": {
		"name": "Marcel Joachim Kloubert"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/mkloubert/vs-rest-api"
	},
	"bugs": {
		"url": "https://github.com/mkloubert/vs-rest-api/issues"
	},
	"readmeFilename": "README.md",
	"dependencies": {
		"fs-extra": "^2.0.0",
		"glob": "^7.1.1",
		"html-entities": "^1.2.0",
		"i18next": "^6.1.2",
		"isbinaryfile": "^3.0.2",
		"mime": "^1.6.0",
		"moment": "^2.21.0"
	},
	"__metadata": {
		"id": "b2b125dc-e3cd-42b6-ae4e-3e42dbf5c91a",
		"publisherId": "cdf2f5e9-e32c-446c-9ed5-f4c4be300887",
		"publisherDisplayName": "Marcel J. Kloubert"
	}
}